/*
 * Styles for internal prosemirror DOM elements
 */

/* Default styles and spacing for editor components */

.ui-editor {
	outline: none;
	margin: 0 auto;
}

.content > .ui-editor p,
.content > .ui-editor h1 {
	margin: 1.5rem auto;
	width: calc(100% - 30px);
}

.content > .ui-editor p {
	max-width: 520px;
}

.content > .ui-editor h1 {
	font-size: 3.2rem;
	max-width: 710px;
	text-align: center;
	line-height: 1.1;
	letter-spacing: -0.04em;
}

/* Empty ui-editors should take up zero space */

.content > .ui-editor.editor_empty:not(.ProseMirror-focused) p:not(:has(.cm-ySelectionCaret)) {
	height: 0;
	margin: 0;
}

/* ui-editors that aren't taking up zero space and are at the top or bottom set top/bottom margins for the page */

.content > .ui-editor:not(.editor_empty):first-child,
.content > .ui-editor.ProseMirror-focused:first-child {
	margin-top: 60px;
}

.content > .ui-editor:not(.editor_empty):last-child,
.content > .ui-editor.ProseMirror-focused:last-child {
	padding-bottom: 60px;
}

/* Sometimes needed when text-editor is inside the iframe webcontainer */

.ProseMirror > * {
	cursor: text;
}

/*
 * For ui-editors (<Editable />) inside custom components (<Component />), use CSS to create a placeholder.
 * (Editables outside of components use the floating menu plugin for their placeholders).
 * Also, this is better than Prosemirror's built in placeholder bc it accounts for multiline content .
 */
div[data-name] .ui-editor.ProseMirror-focused p:has(br:only-child):before {
	position: absolute;
	content: 'Write somethingâ€¦';
	pointer-events: none;
	color: #aaa;
}
